<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <title>Edit Product</title>
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/cropperjs/dist/cropper.min.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.0/css/all.min.css">
    <style>
        body {
            overflow-x: hidden;
        }

        .sidebar {
            height: 100vh;
            background-color: #343a40;
            color: white;
            width: 200px;
        }

        .sidebar a {
            color: white;
            text-decoration: none;
            display: block;
            padding: 15px;
            font-size: 16px;
        }

        .sidebar a:hover {
            background-color: #495057;
        }

        .content-main {
            margin-left: 200px;
            padding: 20px;
            width: calc(100% - 200px);
        }

        .error-message {
            color: red;
            display: none;
        }

        .image-cropper {
            display: none;
            width: 300px;
            height: 200px;
            margin-bottom: 20px;
        }
    </style>
</head>

<body>
    <div class="d-flex">
        <!-- Sidebar -->
        <div class="sidebar d-flex flex-column position-fixed p-3">
            <h4>baeboo</h4>
      <a href="/admin/dashboard"><i class="bi bi-speedometer2 me-2"></i>Dashboard</a>
      <a href="/admin/users"><i class="bi bi-people me-2"></i>Customers</a>
      <a href="/admin/addCategory"><i class="bi bi-tags me-2"></i>Category</a>
      <a href="/admin/brands"><i class="bi bi-list-ul me-2"></i>Brands</a>
      <a href="/admin/addProducts"><i class="bi bi-plus-square me-2"></i>Add Product</a>
      <a href="/admin/products"><i class="bi bi-box-seam me-2"></i>Products</a>
      <a href="/admin/adminOrders"><i class="bi bi-cart me-2"></i>Orders</a>
      <a href="/admin/coupon"><i class="bi bi-ticket-perforated me-2"></i>Coupons</a>
      <a href="/admin/salesReport"><i class="bi bi-bar-chart-line me-2"></i>Sales Report</a>
      
        </div>

        <!-- Main Content -->
        <div class="content-main">
            <div class="content-header mb-4">
                <h2>Edit Product</h2>
            </div>

            <div class="card">
                <div class="card-body">
                    <form method="post" action="/admin/editProduct/<%=product._id%>" enctype="multipart/form-data"
                        onsubmit="return validateForm()">
                        <!-- Product Name -->
                        <div class="mb-3">
                            <label for="product_name" class="form-label">Product Name</label>
                            <input type="text" name="productName" value="<%=product.productName%>"
                                class="form-control border" id="product_name">
                            <div id="productName-error" class="error-message"></div>
                        </div>

                        <!-- Brand -->
                        <div class="mb-3">
                            <label class="form-label">Brand</label>
                            <select class="form-select border" name="brand">
                                <%for(let i=0; i <brand.length; i++) {%>
                                    <option value="<%=brand[i].brandName%>">
                                        <%=brand[i].brandName%>
                                    </option>
                                    <%}%>
                            </select>
                            <div id="brand-error" class="error-message"></div>
                        </div>

                        <!-- Description -->
                        <div class="mb-3">
                            <label class="form-label">Full Description</label>
                            <textarea name="descriptionData" class="form-control border" rows="4">
                                <%=product.description%>
                            </textarea>
                            <div id="description-error" class="error-message"></div>
                        </div>

                        <!-- Pricing & Quantity -->
                        <div class="row">
                            <div class="col-md-4 mb-3">
                                <label class="form-label">Regular Price</label>
                                <input type="text" name="regularPrice" value="<%=product.regularPrice%>"
                                    class="form-control border" placeholder="$">
                                <div id="regularPrice-error" class="error-message"></div>
                            </div>
                            <div class="col-md-4 mb-3">
                                <label class="form-label">Sales Price</label>
                                <input type="text" name="salesPrice" value="<%=product.salesPrice%>"
                                    class="form-control border">
                                <div id="salesPrice-error" class="error-message"></div>
                            </div>
                            <div class="col-md-4 mb-3">
                                <label class="form-label">Quantity</label>
                                <input type="text" name="quantity" value="<%=product.quantity%>"
                                    class="form-control border">
                                <div id="quantity-error" class="error-message"></div>
                            </div>
                        </div>

                        <!-- Color -->
                        <div class="mb-3">
                            <label class="form-label">Color</label>
                            <input type="text" name="color" value="<%=product.color%>" class="form-control border">
                            <div id="color-error" class="error-message"></div>
                        </div>

                        <!-- Category -->
                        <div class="mb-4">
                            <label class="form-label">Category</label>
                            <select class="form-select border" name="category">
                                <%for(let i=0;i <cat.length; i++) {%>
                                    <option value="<%=cat[i].name%>">
                                        <%=cat[i].name%>
                                    </option>
                                    <%}%>
                            </select>
                            <div id="category-error" class="error-message"></div>
                        </div>

                        <!-- Images Upload -->
                        <div class="card mb-2">
                            <div class="card-header">
                                <h4>Choose images</h4>
                            </div>
                            <%for(let i=0; i<product.productImage.length; i++) {%>

                            <div class="col-md-12">
                                <div class="mb-4">
                                    <div class="col-12">
                                        <div>
                                            <input type="hidden" value="<%=product.productImage[i]%>" class="imageDatas">
                                            <img class="rounded" style="width: 50px; height: 60px;"
                                             src="/uploads/re-image/<%=product.productImage[i]%>" alt="">
                                            <i onclick="deleteSingleImage('<%=product.productImage[i]%>','<%=product._id%>')"
                                                style="cursor: pointer; margin-left: .5rem;"
                                                class="fa fa-times text-danger"></i>
                                            </div>
                                    </div>

                                </div>
                            </div>
                            <%}%>


                            <div class="card-body">
                                <div class="card-body align-items-center" style="margin-bottom: 20px;">
                                    <img src="" alt="" id="imgView1">
                                    <input class="form-control" type="file" name="images" id="input1"
                                        accept="image/png, image/jpeg, image/jpg"
                                        onchange="viewImage1(event), viewImage(event, 1)">
                                    <div id="images-error" class="error-message"></div>
                                </div>
                                <div class="image-cropper d-flex align-items-center"
                                    style="display:none; width: 300px; height: 200px; margin-bottom: 20px;">
                                    <img src="" id="croppedImg1" alt="">
                                    <button type="button" id="saveButton1" class="btn-sm btn-primary">Save</button>
                                </div>
                                <div class="row">
                                    <div class="card-body align-items-center" style="margin-bottom: 20px;">
                                        <img src="" alt="" id="imgView2">
                                        <input class="form-control" type="file" name="images" id="input2"
                                            accept="image/png, image/jpeg, image/jpg"
                                            onchange="viewImage2(event),viewImage(event, 2)">
                                    </div>
                                    <div class="image-cropper d-flex align-items-center"
                                        style="display:none; width: 300px; height: 200px; margin-bottom: 20px;">
                                        <img src="" id="croppedImg2" alt="">
                                        <button type="button" id="saveButton2" class="btn-sm btn-primary">Save</button>
                                    </div>
                                </div>

                                <div class="row">
                                    <div class="card-body align-items-center" style="margin-bottom: 20px;">
                                        <img src="" alt="" id="imgView3">
                                        <input class="form-control" type="file" name="images" id="input3"
                                            accept="image/png, image/jpeg, image/jpg"
                                            onchange="viewImage3(event),viewImage(event, 3)">
                                    </div>
                                    <div class="image-cropper d-flex align-items-center"
                                        style="display:none; width: 300px; height: 200px; margin-bottom: 20px;">
                                        <img src="" id="croppedImg3" alt="">
                                        <button type="button" id="saveButton3" class="btn-sm btn-primary">Save</button>
                                    </div>
                                </div>

                                <div class="row">
                                    <div class="card-body align-items-center" style="margin-bottom: 20px;">
                                        <img src="" alt="" id="imgView4">
                                        <input class="form-control" type="file" name="images" id="input4"
                                            accept="image/png, image/jpeg, image/jpg"
                                            onchange="viewImage4(event),viewImage(event, 4)">
                                    </div>
                                    <div class="image-cropper d-flex align-items-center"
                                        style="display:none; width: 300px; height: 200px; margin-bottom: 20px;">
                                        <img src="" id="croppedImg4" alt="">
                                        <button type="button" id="saveButton4" class="btn-sm btn-primary">Save</button>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <!-- Submit Button -->
                        <div>
                            <button class="btn btn-md rounded font-sm hover-up" id="updatebtn" type="button"
                                onclick="validateAndSubmit()">Update</button>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>

    <!-- Scripts -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/cropperjs/dist/cropper.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.7.1/jquery.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <script>
        function validateAndSubmit() {
            if (validateForm()) {
                document.forms[0].submit();
            }
        }

        function validateForm() {
            console.log("validate form");
            clearErrorMessages();

            const name = document.getElementsByName('productName')[0].value.trim();
            const description = document.getElementsByName('descriptionData')[0].value.trim();
            const brand = document.getElementsByName('brand')[0].value.trim();
            const price = document.getElementsByName('regularPrice')[0].value.trim();
            const salesPrice = document.getElementsByName('salesPrice')[0].value.trim();
            const color = document.getElementsByName('color')[0].value.trim();
            const category = document.getElementsByName('category')[0].value.trim();
            const quantity = document.getElementsByName('quantity')[0].value.trim();
            const images = document.getElementById('imageview1');
            const imageInputs = document.querySelectorAll('.imageDatas');
            const imageDatas = Array.from(imageInputs).map(input => input.value).filter(v => v);

            let isValid = true;

            if (name === "") {
                Swal.fire({
                    icon:"error",
                    title: "Error",
                    text: "Please enter a product name.",
                    confirmButtonText: "OK"
                });
                isValid = false;
            }

            if (description === "") {
                Swal.fire({
                    icon:"error",
                    title: "Error",
                    text: "Please enter a product description.",
                    confirmButtonText: "OK"
                });
                isValid = false;
            }

            if (quantity.trim() === "" || isNaN(quantity) || parseInt(quantity) < 0) {
                Swal.fire({
                    icon:"error",
                    title: "Error",
                    text: "Please enter a valid non-negative quantity.",
                    confirmButtonText: "OK"
                });
         isValid = false;
            }

            if (!/^\d+(\.\d{1,2})?$/.test(price) || parseFloat(price) < 0) {
                Swal.fire({
                    icon:"error",
                    title: "Error",
                    text: "Please enter a valid non-negative price.",
                    confirmButtonText: "OK" 
                });
                isValid = false;
            }

            if (!/^\d+(\.\d{1,2})?$/.test(salesPrice) || parseFloat(salesPrice) < 0) {
                Swal.fire({
                    icon:"error",
                    title: "Error",
                    text: "Please enter a valid non-negative sales price.",
                    confirmButtonText: "OK"
                });
                isValid = false;
            }

            if (color === "") {
                Swal.fire({
                    icon:"error",
                    title: "Error",
                    text: "Please enter a color.",
                    confirmButtonText: "OK"
                });
                isValid = false;
            }

            if (!imageDatas && (!images || images.files.length === 0)) {
                Swal.fire({
                    icon:"error",
                    title: "Error",
                    text: "Please upload at least one image.",
                    confirmButtonText: "OK"
                });
                isValid = false;
            }

            return isValid;
        }

        function displayErrorMessage(elementId, message) {
            const errorElement = document.getElementById(elementId);
            errorElement.innerText = message;
            errorElement.style.display = "block";
        }

        function clearErrorMessages() {
            const errorElements = document.getElementsByClassName('error-message');
            Array.from(errorElements).forEach(element => {
                element.innerText = '';
                element.style.display = "none";
            });
        }

        function viewImage1(event) {
            document.getElementById('imgView1').src = URL.createObjectURL(event.target.files[0]);
        }

        function viewImage2(event) {
            document.getElementById('imgView2').src = URL.createObjectURL(event.target.files[0]);
        }

        function viewImage3(event) {
            document.getElementById('imgView3').src = URL.createObjectURL(event.target.files[0]);
        }

        function viewImage4(event) {
            document.getElementById('imgView4').src = URL.createObjectURL(event.target.files[0]);
        }

        function viewImage(event, index) {
            const input = event.target;
            const reader = new FileReader();

            reader.onload = function () {
                const dataURL = reader.result;
                const image = document.getElementById('croppedImg' + index);
                image.src = dataURL;

                const cropper = new Cropper(image, {
                    aspectRatio: 1,
                    viewMode: 1,
                    guides: true,
                    background: false,
                    autoCropArea: 1,
                    zoomable: true
                });

                const cropperContainer = document.querySelector('#croppedImg' + index).parentNode;
                cropperContainer.style.display = 'flex';

                const saveButton = document.querySelector('#saveButton' + index);
                saveButton.addEventListener('click', async function () {
                    const croppedCanvas = cropper.getCroppedCanvas();
                    const croppedImage = document.getElementById("croppedImg" + index);
                    croppedImage.src = croppedCanvas.toDataURL('image/jpeg', 1.0);

                    const timestamp = new Date().getTime();
                    const fileName = `cropped-img-${timestamp}-${index}.png`;

                    await croppedCanvas.toBlob(blob => {
                        const file = new File([blob], fileName, { type: "image/png" });
                        const dataTransfer = new DataTransfer();
                        dataTransfer.items.add(file);
                        input.files = dataTransfer.files;
                    });

                    cropperContainer.style.display = 'none';
                }, { once: true }); // avoid multiple event bindings
            };

            reader.readAsDataURL(input.files[0]);
        }

        const selectedImages = [];

        document.getElementById("imageInput")?.addEventListener("change", handleFileSelect);

        function handleFileSelect(event) {
            const addedImagesContainer = document.getElementById("addedImagesContainer");
            addedImagesContainer.innerHTML = "";

            const files = event.target.files;
            for (let i = 0; i < files.length; i++) {
                const file = files[i];
                selectedImages.push(file);

                const thumbnail = document.createElement("div");
                thumbnail.classList.add("thumbnail");

                const img = document.createElement("img");
                img.src = URL.createObjectURL(file);
                img.alt = "thumbnail";
                img.style.width = "50px";
                img.style.height = "auto";

                const removeIcon = document.createElement("span");
                removeIcon.classList.add("remove-icon");
                removeIcon.innerHTML = "&times;";
                removeIcon.style.cursor = "pointer";

                removeIcon.addEventListener("click", function () {
                    const index = selectedImages.indexOf(file);
                    if (index !== -1) {
                        selectedImages.splice(index, 1);
                    }
                    thumbnail.remove();
                });

                thumbnail.appendChild(img);
                thumbnail.appendChild(removeIcon);
                addedImagesContainer.appendChild(thumbnail);
            }
        }

        function deleteSingleImage(imageId,productId) {
            console.log("Deleting image:",imageId,"from product:",productId);   //for debugging
            $.ajax({
                url:"/admin/deleteImage",
                method: "post",
                data : {
                    imageNameToServer: imageId,
                    productIdToServer: productId
                },
                success:(res)=> {
                    console.log("Delete response:",res); //debug
                    if(res.status === true) {
                        window.location.reload();
                    }
                }
            })
        }
    </script>

</body>

</html>