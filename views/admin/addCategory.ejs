<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8">
  <title>Category</title>
  <meta name="viewport" content="width=device-width, initial-scale=1">

  <!-- Bootstrap CDN -->
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet">
  <link href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.5/font/bootstrap-icons.css" rel="stylesheet">
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/sweetalert2@10/dist/sweetalert2.min.css" />

  <style>
  body {
  overflow-x: hidden;
  background-color: #f8f9fa;
  font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
}

.sidebar {
      height: 100vh;
      background-color: #343a40;
      color: white;
    }

    .sidebar a {
      color: white;
      text-decoration: none;
      display: block;
      padding: 15px;
      font-size: 16px;
    }

    .sidebar a:hover {
      background-color: #495057;
    }

.content-main {
  margin-left: 220px;
  padding: 30px;
}

.card {
  border-radius: 10px;
  box-shadow: 0 2px 10px rgba(0, 0, 0, 0.05);
  background-color: #fff;
}

.table th,
.table td {
  vertical-align: middle;
}

.table td a {
  text-decoration: none;
}

.btn {
  border-radius: 8px;
  font-size: 14px;
  padding: 6px 12px;
}

.badge {
  font-size: 13px;
  padding: 6px 10px;
}

.pagination-container {
  margin-top: 30px;
  text-align: center;
}

.pagination-container a,
.pagination-container .current-page {
  margin: 0 5px;
  padding: 8px 14px;
  font-size: 14px;
  border-radius: 5px;
  color: #007bff;
  text-decoration: none;
  border: 1px solid #dee2e6;
}

.pagination-container .current-page {
  background-color: #007bff;
  color: white;
}

.header-bar {
  padding: 20px;
  margin-bottom: 20px;
  background-color: #ffffff;
  border-radius: 8px;
  box-shadow: 0 2px 6px rgba(0, 0, 0, 0.03);
}

.card-header h5 {
  margin: 0;
  font-size: 18px;
  font-weight: 600;
}

.input-group input:focus {
  box-shadow: none;
}

@media (max-width: 768px) {
  .sidebar {
    display: none;
  }

  .content-main {
    margin-left: 0;
    padding: 15px;
  }

  .form-control {
    font-size: 14px;
  }

  .btn {
    font-size: 13px;
    padding: 5px 10px;
  }

  .table-responsive {
    overflow-x: auto;
  }
}

  </style>
</head>

<body>
  <div class="d-flex">
    <!-- Sidebar -->
    <div class="sidebar d-flex flex-column position-fixed p-3">
      <h4>baeboo</h4>
      <a href="/admin/dashboard"><i class="bi bi-speedometer2 me-2"></i>Dashboard</a>
      <a href="/admin/users"><i class="bi bi-people me-2"></i>Customers</a>
      <a href="/admin/addCategory"><i class="bi bi-tags me-2"></i>Category</a>
      <a href="/admin/brands"><i class="bi bi-list-ul me-2"></i>Brands</a>
      <a href="/admin/addProducts"><i class="bi bi-plus-square me-2"></i>Add Product</a>
      <a href="/admin/products"><i class="bi bi-box-seam me-2"></i>Products</a>
      <a href="/admin/adminOrders"><i class="bi bi-cart me-2"></i>Orders</a>
      <a href="/admin/coupon"><i class="bi bi-ticket-perforated me-2"></i>Coupons</a>
      <a href="/admin/salesReport"><i class="bi bi-bar-chart-line me-2"></i>Sales Report</a>
    </div>

    <!-- Main Content -->
    <section class="content-main w-100">
      <div class="content-header">
        <h2 class="content-title card-title">Category</h2>
      </div>

      <!-- Search Bar -->
<header class="card-header mb-4">
  <div class="d-flex justify-content-between align-items-center flex-wrap gap-3">
    <h5 class="mb-0 ms-2"></h5>
    <form action="/admin/addCategory" method="get" class="d-flex flex-wrap align-items-center gap-2">
      <div class="input-group" style="min-width: 300px;">
        <input
          type="text"
          class="form-control rounded-start-pill"
          placeholder="Search categories..."
          name="search"
          value="<%= typeof search !== 'undefined' ? search : '' %>"
        />
        <button class="btn btn-outline-primary rounded-end-pill px-4" type="submit">
          <i class="bi bi-search"></i>
        </button>
      </div>
       <% if (search) { %>
      <a href="/admin/addCategory" class="btn btn-outline-secondary px-4 rounded-pill d-flex align-items-center">
        <i class="bi bi-x-circle me-2"></i> Clear
      </a>
        <% } %>
    </form>
  </div>
</header>



      <!-- Form and Table -->
      <div class="card">
        <div class="card-body row">
          <!-- Category Form -->
          <div class="col-md-3">
            <form method="post" action="/admin/addCategory" onsubmit="return handleFormSubmit(event)">
              <div class="mb-4">
                <label for="product_name" class="form-label">Name</label>
                <input type="text" name="name" placeholder="Type here" class="form-control" id="product_name"
                  required />
                <div id="name-error" class="error-message"></div>
              </div>
              <div class="mb-4">
                <label class="form-label">Description</label>
                <textarea placeholder="Type here" name="description" class="form-control" id="descriptionId"
                  required></textarea>
                <div id="description-error" class="error-message"></div>
              </div>
              <div class="d-grid">
                <button class="btn btn-primary" type="submit">Create category</button>
              </div>
            </form>
          </div>

          <!-- Category Table -->
          <div class="col-md-9">
            <div class="table-responsive">
              <table class="table table-hover">
                <thead>
                  <tr>
                    <th></th>
                    <th>Name</th>
                    <th>Description</th>
                    <th>Offer Price</th>
                    <th>Offer</th>
                    <th>Status</th>
                    <th>List/Unlist</th>
                    <th>Edit</th>
                  </tr>
                </thead>
                <tbody>
                  <% cat.reverse().forEach((category, index)=> { %>
                    <tr>
                      <td></td>
                      <td class="text-start">
                        <%= category.name %>
                      </td>
                      <td class="text-start">
                        <%= category.description %>
                      </td>
                      <td>
                        <% if(category.categoryOffer) {%>
                          <%=category.categoryOffer %>
                            <% } else { %>
                              0%
                              <% } %>
                      </td>
                      <td class="text-start">
                        <% if(category.categoryOffer===0) { %>
                          <button class="btn btn-info" style="width: 100px">
                            <a href="#" class="text-white" onclick="addOffer('<%= category._id %>')">Add Offer</a>
                          </button>
                          <% } else {%>
                            <button class="btn btn-info" style="width: 100px">
                              <a href="#" class="text-white" onclick="removeOffer('<%= category._id %>')">Remove</a>
                            </button>
                            <% } %>
                      </td>
                      <td class="text-start">
                        <% if(category.isListed) { %>
                          <span class="badge rounded-pill alert-success text-black" style="width: 60px">Listed</span>
                          <% } else { %>
                            <span class="badge rounded-pill alert-danger text-black" style="width: 60px">Unlisted</span>
                            <% } %>
                      </td>
                      <td class="text-start">
                        <% if(category.isListed) { %>
                          <button class="btn btn-danger" style="width: 70px">
                            <a href="/admin/listCategory?id=<%= category._id%>" class="text-white">Unlist</a>
                          </button>
                          <% } else { %>
                            <button class="btn btn-success" style="width: 70px">
                              <a href="/admin/unlistCategory?id=<%= category._id%>" class="text-white">List</a>
                            </button>
                            <% } %>
                      </td>
                      <td class="text-start">
                        <a href="/admin/editCategory?id=<%=category._id%>" class="btn btn-info text-white">Edit</a>
                      </td>
                    </tr>
                    <% }) %>
                </tbody>
              </table>
            </div>
          </div>
        </div>
      </div>

      <!-- Pagination -->
      <div class="pagination-container">
  <% if (currentPage > 1) { %>
    <a href="?page=<%= currentPage - 1 %><%= search ? '&search=' + search : '' %>">&laquo; Previous</a>
  <% } %>
  <% for (let i = 1; i <= totalPages; i++) { %>
    <% if (i === currentPage) { %>
      <span class="current-page"><%= i %></span>
    <% } else { %>
      <a href="?page=<%= i %><%= search ? '&search=' + search : '' %>"><%= i %></a>
    <% } %>
  <% } %>
  <% if (currentPage < totalPages) { %>
    <a href="?page=<%= currentPage + 1 %><%= search ? '&search=' + search : '' %>">Next &raquo;</a>
  <% } %>
</div>

    </section>
  </div>

  <!-- Scripts -->
  <script src="https://cdn.jsdelivr.net/npm/sweetalert2@10/dist/sweetalert2.min.js"></script>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.7.1/jquery.min.js"></script>
  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"></script>

  <script>
    function handleFormSubmit(event) {
      event.preventDefault();
      const isValid = validateForm();
      if (!isValid) return;

      const name = document.getElementsByName("name")[0].value;
      const description = document.getElementById("descriptionId").value;

      fetch("/admin/addCategory", {
        method: "POST",
        headers: {
          "Content-Type": "application/json"
        },
        body: JSON.stringify({ name, description })
      })
        .then(res => {
          if (!res.ok) {
            return res.json().then(err => {
              throw new Error(err.error);
            });
          }
          return res.json();
        })
        .then(() => location.reload())
        .catch(error => {
          Swal.fire({
            icon: 'error',
            title: 'Oops...',
            text: error.message === "Category already exists"
              ? 'Category already exists!'
              : 'An error occurred while adding the category'
          });
        });
    }


    function validateForm() {
      clearErrorMessages();
      const name = document.getElementsByName("name")[0].value.trim();
      const description = document.getElementById("descriptionId").value.trim();
      let isValid = true;

      if (!name && !description) {
        Swal.fire({
          icon: "error",
          title: "All fields required",
          text: "Please fill in all fields"
        });
        return false;
      }

      if (!name) {
        Swal.fire({
          icon: "error",
          title: "Name Required",
          text: "Please enter a category name"
        });
        isValid = false;
        return false;
      } else if (!/^[a-zA-Z\s]+$/.test(name)) {
        Swal.fire({
          icon: "error",
          title: "Invalid Name",
          text: "Name should only contain letters and spaces"
        });
        isValid = false;
        return false;
      }

      if (!description) {
        Swal.fire({
          icon: "error",
          title: "Description Required",
          text: "Please enter a description"
        });
        isValid = false;
        return false;
      }

      return isValid;
    }


    function displayErrorMessage(elementId, message) {
      const el = document.getElementById(elementId);
      el.innerText = message;
      el.style.display = "block";
    }

    function clearErrorMessages() {
      document.querySelectorAll(".error-message").forEach(el => {
        el.innerText = "";
        el.style.display = "none";
      });
    }

    async function addOffer(categoryId) {
      const { value: amount } = await Swal.fire({
        title: "Offer in percentage",
        input: "number",
        inputLabel: "Percentage",
        inputPlaceholder: "%"
      });
      if (amount) {
        try {
          const response = await fetch("/admin/addCategoryOffer", {
            method: "POST",
            headers: {
              "Content-Type": "application/json"
            },
            body: JSON.stringify({
              percentage: amount,
              categoryId: categoryId
            }),
          });

          const data = await response.json();
          if (response.ok && data.status === true) {
            Swal.fire({
              title: "Offer added",
              content: "The offer has been added successfully",
              type: "success"
            }).then(() => {
              location.reload();
            })
          } else {
            Swal.fire("Failed", data.message || "Adding offer failed", "error");
          }
        } catch (error) {
          Swal.fire({
            icon: 'error',
            title: 'Oops...',
            text: "An error occurred while adding the offer"
          });
          console.log("Error adding offer:", error);
        }
      }

    }

    async function removeOffer(categoryId) {
      try {
        const response = await fetch("/admin/removeCategoryOffer", {
          method: "POST",
          headers: {
            "Content-Type": "application/json"
          },
          body: JSON.stringify({
            categoryId: categoryId
          }),
        })
        const data = await response.json();
        if (response.ok && data.status === true) {
          Swal.fire({
            title: "Offer removed",
            content: "The offer has been removed successfully",
            type: "success"
          }).then(() => {
            location.reload();
          })
        } else {
          Swal.fire("Failed", data.message || "Removing offer failed", "error");
        }
      } catch (error) {
        Swal.fire({
          icon: 'error',
          title: 'Oops...',
          content: "An error occurred while removing the offer"
        });
        console.error("Error removing offer:", error);
      }
    }
  </script>
</body>

</html>