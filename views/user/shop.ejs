 <%-include("../../views/partials/user/header.ejs")%>
<style>
 body {
  font-family: 'Segoe UI', sans-serif;
  background-color: #f6f8fa;
  margin: 0;
  padding: 0;
}

.main-container {
  max-width: 1300px;
  margin: 0 auto;
  padding: 30px 20px;
}

.shop-topbar {
  display: flex;
  justify-content: flex-end;
  margin-bottom: 20px;
}

.search-form {
  display: flex;
  background: #fff;
  border-radius: 30px;
  border: 1px solid #ccc;
  box-shadow: 0 2px 4px rgba(0,0,0,0.05);
  overflow: hidden;
  max-width: 300px;
}

.search-input {
  flex: 1;
  padding: 10px 15px;
  border: none;
  font-size: 14px;
  outline: none;
}

.search-button {
  padding: 10px 20px;
  background-color: #1e918b;
  color: white;
  border: none;
  cursor: pointer;
  font-weight: 500;
  transition: 0.3s;
}

.search-button:hover {
  background-color: #12746f;
}

/* Layout */
.product-list-container {
  display: flex;
  gap: 30px;
}

/* Sidebar */
.sidebar {
  width: 250px;
  background: #fff;
  padding: 20px;
  border-radius: 10px;
  box-shadow: 0 4px 10px rgba(0,0,0,0.06);
}

.filter-title {
  font-weight: 600;
  font-size: 16px;
  margin-bottom: 10px;
  border-bottom: 1px solid #ddd;
  padding-bottom: 5px;
}

.filter-item {
  margin: 8px 0;
  font-size: 14px;
}

.filter-item a {
  color: #333;
  text-decoration: none;
}

.filter-item a:hover {
  color: #1e918b;
}

/* Price Filter */
.price-filter .price-options {
  display: flex;
  flex-direction: column;
  gap: 10px;
  margin-top: 10px;
}

.price-button {
  background: #f1f1f1;
  border: none;
  padding: 10px;
  border-radius: 20px;
  cursor: pointer;
  font-size: 14px;
  transition: all 0.2s ease;
}

.price-button:hover {
  background: #1e918b;
  color: white;
}

/* Product Grid */
.product-grid {
  display: grid;
  grid-template-columns: repeat(auto-fill, minmax(240px, 1fr));
  gap: 25px;
  flex: 1;
}

.product-card {
  background: white;
  padding: 15px;
  border-radius: 12px;
  box-shadow: 0 4px 8px rgba(0,0,0,0.05);
  text-align: center;
  position: relative;
  transition: 0.2s ease;
}

.product-card:hover {
  transform: translateY(-5px);
}

.product-card img {
  width: 100%;
  height: 200px;
  object-fit: cover;
  border-radius: 8px;
}

.product-card h4 {
  font-size: 16px;
  margin: 10px 0 5px;
  font-weight: 600;
}

.product-card p {
  font-size: 14px;
  color: #555;
}

.product-card strike {
  color: #999;
}

.quantity-input {
  width: 60px;
  margin-top: 8px;
  padding: 6px;
  border-radius: 4px;
  border: 1px solid #ccc;
}

.add-to-cart-btn {
  background-color: #46698f;
  color: white;
  padding: 10px;
  width: 100%;
  margin-top: 10px;
  border: none;
  border-radius: 6px;
  cursor: pointer;
  transition: 0.2s ease;
}

.add-to-cart-btn:hover {
  background-color: #2f4f6d;
}

/* Wishlist */
.wishlist-btn {
  position: absolute;
  top: 10px;
  right: 10px;
  font-size: 18px;
  color: #ff5c5c;
  background: #fff;
  border-radius: 50%;
  padding: 5px 8px;
  box-shadow: 0 2px 6px rgba(0,0,0,0.1);
  cursor: pointer;
}

/* Pagination */
.pagination {
  display: flex;
  justify-content: center;
  gap: 10px;
  margin-top: 40px;
}

.pagination a {
  padding: 8px 14px;
  background: #e0e0e0;
  border-radius: 6px;
  text-decoration: none;
  color: #333;
  transition: 0.2s;
}

.pagination a:hover {
  background-color: #1e918b;
  color: white;
}

.pagination .active {
  background-color: #1e918b;
  color: white;
}

</style>

<div class="main-container">
 <section class="shop-page container">
   <div class="shop-topbar">
     <div class="search-bar">
       <form action="/search" method="POST" class="search-form">
         <input type="text" name="query" placeholder="Search items..." class="search-input" />
         <button type="submit" class="search-button">Search</button>
       </form>
     </div>
   </div>

 
   <div class="product-list-container">
     <aside class="sidebar">
       <div class="filter-section">
         <div class="filter-title">Categories</div>
         <div class="category-brand-container">
           <ul>
            <%for(let i=0; i<category.length; i++) {%>
               <li class="filter-item">
                 <a href="/filter?category=<%=category[i]._id%>"><%=category[i].name%></a>
               </li>
               <%}%>
           </ul>
         </div>
       </div>
     
       <div class="filter-section">
         <div class="filter-title">Brands</div>
         <div class="category-brand-container">
           <ul>
            <%for(let i=0; i<brand.length; i++) {%>
               <li class="filter-item">
                 <a href="/filter?brand=<%=brand[i]._id%>"><%=brand[i].brandName%></a>
               </li>
               <%}%>
           </ul>
         </div>
       </div>
     
       <div class="price-filter">
         <div class="filter-title">Filter by Price</div>
         <form id="price-filter-form">
           <div class="price-options">
             <a href="/filterPrice?gt=0&lt=500"><button type="button" class="price-button">Under ₹500</button></a>
             <a href="/filterPrice?gt=500&lt=1000"><button type="button" class="price-button">₹500 - ₹1000</button></a>
             <a href="/filterPrice?gt=1000&lt=1500"><button type="button" class="price-button">₹1000- ₹1500</button></a>
             <a href="/filterPrice?gt=1500&lt=100000"><button type="button" class="price-button">Above ₹1500</button></a>
           </div>
         </form>
       </div>
     </aside>
     <main class="product-grid">
        <%for(let i=0; i<products.length; i++){%>
         <div class="product-card">
           <span class="wishlist-btn" onclick="addToWishlist('<%=products[i]._id%>')">❤️</span>
           <a href="/productDetails?id=<%=products[i]._id%>">
             <img src="/uploads/re-image/<%=products[i].productImage[0]%>" alt="<%=products[i].productName%>" />
             <h4><%=products[i].productName%></h4>
             <p>Brand:<%=products[i].brand%></p>
             <p>Price:₹<%=products[i].salesPrice.toLocaleString('en-IN')%><span class="text-muted"><strike>₹<%=products[i].regularPrice.toLocaleString('en-IN')%></strike></span></p>
           </a>
           <!--Quantity input-->
           <input type="number" id="qty-<%= products[i]._id %>" min="1" value="1" class="quantity-input"/>
           <button class="add-to-cart-btn" onclick="addToCart('<%= products[i]._id%>')">Add to Cart</button>
         </div>
         <%}%>
     </main>
   </div>
<!-- Pagination -->
   <div class="pagination">
    <%if(currentPage > 1) { %>
        <a class="btn" href="/shop?page=<%= currentPage - 1 %>">Prev</a>
    <% } %>

    <% for(let i = 1; i <= totalPages; i++) { %>
        <a class="btn <%= currentPage === i ? 'active' : '' %>" href="/shop?page=<%= i %>"><%= i %></a>
    <% } %>
    <% if(currentPage < totalPages) { %>
        <a class="btn" href="/shop?page=<%= currentPage + 1 %>">Next</a>
    <% } %>
   </div>
 
 </section>
</div>
<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.7.0/jquery.min.js"></script>
<%-include("../../views/partials/user/footer.ejs")%>
<script>
  function addToWishlist(productId){
    $.ajax({
      url : "/addToWishlist",
      method : "POST",
      data: {productId:productId},
      success:(res) => {
         console.log('addToWishlist response:', res);
        if(res.success){
          Swal.fire({
            title:"Added to wishlist",
            text:"The product has been added to your wishlist",
            icon:"success",
            timer:2000
          })
        }else {
          Swal.fire({
            title:"Already in wishlist",
            text:res.message,
            icon:"info",
            timer:2000
          })
        }
      },
      error : (error) => {
        Swal.fire({
          title:"Error",
          text:"There is an error adding the product to your wishlist",
          icon:"error",
          timer:2000
        })
      }
    })
  }
</script>
<script>
  function addToCart(productId){
    const qty = parseInt(document.getElementById("qty-" + productId).value);
    fetch("/addToCart",{
      method: "POST",
      headers: {
        'content-type':'application/json'
      },
      body: JSON.stringify({productId,quantity:qty})
    }).then(res => res.json())
    .then(data => {
      if(data.success) {
        Swal.fire("success",data.message,"success")
      }else{
        Swal.fire("Error",data.message,"error");
      }
    })
    .catch(err => {
      Swal.fire("Error","Something went wrong","error")
    });
  }
</script>
